name: Create Version Branch on New Version

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'Chart.yaml'

jobs:
  detect-version-change:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, 'update Helm chart appVersion')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(grep "appVersion:" Chart.yaml | cut -d '"' -f 2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          MAJOR_MINOR=$(echo $VERSION | grep -Eo "^[0-9]+\.[0-9]+")
          echo "major_minor=$MAJOR_MINOR" >> $GITHUB_OUTPUT

      - name: Check if version branch exists
        id: check_branch
        run: |
          if git ls-remote --heads origin "v${{ steps.current_version.outputs.major_minor }}"; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create new version branch
        if: steps.check_branch.outputs.branch_exists == 'false'
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin main
          git checkout -b "v${{ steps.current_version.outputs.major_minor }}" origin/main
          git push origin "v${{ steps.current_version.outputs.major_minor }}"
          echo "Created new version branch v${{ steps.current_version.outputs.major_minor }}"

      - name: Add comment to PR
        if: steps.check_branch.outputs.branch_exists == 'false'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `âœ… Created new version branch v${{ steps.current_version.outputs.major_minor }} from main branch for version ${{ steps.current_version.outputs.version }}`
            })