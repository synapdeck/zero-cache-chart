{{- $upstreamDirect := and (not .Values.common.database.upstream.url.valueFrom) .Values.common.database.upstream.url.value }}
{{- $cvrDirect := and (not .Values.common.database.cvr.url.valueFrom) .Values.common.database.cvr.url.value }}
{{- $changeDirect := and (not .Values.common.database.change.url.valueFrom) .Values.common.database.change.url.value }}

{{- if and (not .Values.common.database.upstream.url.value) (not .Values.common.database.upstream.url.valueFrom) }}
{{- fail "You must provide either common.database.upstream.url.value or common.database.upstream.url.valueFrom" }}
{{- end }}

{{- if or $upstreamDirect $cvrDirect $changeDirect }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "zero-cache.fullname" . }}-db
  labels:
    {{- include "zero-cache.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- /* Upstream DB */}}
  {{- if $upstreamDirect }}
  upstream-db: {{ .Values.common.database.upstream.url.value | quote }}
  {{- end }}

  {{- /* CVR DB */}}
  {{- if $cvrDirect }}
  cvr-db: {{ .Values.common.database.cvr.url.value | quote }}
  {{- end }}

  {{- /* Change DB */}}
  {{- if $changeDirect }}
  change-db: {{ .Values.common.database.change.url.value | quote }}
  {{- end }}
{{- end }}
{{- if or (and .Values.common.auth.secret .Values.common.auth.secret.value) (and .Values.common.auth.jwk .Values.common.auth.jwk.value) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "zero-cache.fullname" . }}-auth
  labels:
    {{- include "zero-cache.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- if and .Values.common.auth.secret .Values.common.auth.secret.value }}
  auth-secret: {{ .Values.common.auth.secret.value | quote }}
  {{- end }}
  {{- if and .Values.common.auth.jwk .Values.common.auth.jwk.value }}
  auth-jwk: {{ .Values.common.auth.jwk.value | quote }}
  {{- end }}
{{- end }}
{{- if .Values.common.adminPassword }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "zero-cache.fullname" . }}-admin
  labels:
    {{- include "zero-cache.labels" . | nindent 4 }}
type: Opaque
stringData:
  admin-password: {{ .Values.common.adminPassword | quote }}
{{- end }}
{{- if and .Values.s3.enabled .Values.common.litestream.backupUrl }}
{{- if or (and .Values.s3.accessKey .Values.s3.accessKey.value) (and .Values.s3.secretKey .Values.s3.secretKey.value) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "zero-cache.fullname" . }}-s3
  labels:
    {{- include "zero-cache.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- if and .Values.s3.accessKey .Values.s3.accessKey.value }}
  access-key: {{ .Values.s3.accessKey.value | quote }}
  {{- end }}
  {{- if and .Values.s3.secretKey .Values.s3.secretKey.value }}
  secret-key: {{ .Values.s3.secretKey.value | quote }}
  {{- end }}
{{- end }}
{{- end }}
